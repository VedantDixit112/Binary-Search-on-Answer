class Solution {
    int max=Integer.MIN_VALUE;
    public int splitArray(int[] arr, int k) {
        int low=0;
        int sum=0;
        for(int l:arr){
            sum+=l;
            max=Math.max(max,l);
        }
        int high=sum;
        int res=0;
        while(low<=high){
            int mid=(low+(high-low)/2);
            if(path(mid,arr,k)){
                res=mid;
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return res;
    }
    public boolean path(int mid,int []arr,int k){
        if(mid<max){
            return false;
        }
        int count=0;
        int sum=0;
        boolean flg=true;
        for(int i=0;i<arr.length;i++){
            if(sum+arr[i]==mid && i==arr.length-1){
                count++;
                flg=false;
                break;
            }
            else if(sum+arr[i]>mid){
                count++;
                sum=0;
            }
            sum+=arr[i];
        }
        if(flg && sum<=mid){
            count++;
        }
        return count<=k;
    }
}
